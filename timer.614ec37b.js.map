{"version":3,"sources":["timer.js"],"names":["dateSelector","document","getElementById","startButton","querySelector","days","hours","minutes","seconds","disabled","console","log","value","startButtonActive","Timer","constructor","onTick","intervalId","isActive","start","finishTime","textContent","setInterval","currentTime","Date","now","deltaTime","time","convertMs","stop","clearInterval","ms","pad","Math","floor","hour","minute","second","String","padStart","timer","updateTimerField","addEventListener","bind"],"mappings":";AAAA,MAAMA,EAAeC,SAASC,eAAe,iBACvCC,EAAcF,SAASG,cAAc,gBACrCC,EAAOJ,SAASG,cAAc,eAC9BE,EAAQL,SAASG,cAAc,gBAC/BG,EAAUN,SAASG,cAAc,kBACjCI,EAAUP,SAASG,cAAc,kBAEvCD,EAAYM,UAAW,EACvBC,QAAQC,IAAIX,EAAaY,OACzB,MAAMC,EAAoB,KACjBb,EAAaY,QAGlBT,EAAYM,UAAW,IAHlBT,EAAaY,QAGlBT,EAAYM,UAAW,GAI3B,MAAMK,EACFC,aAAY,OAAEC,IACLC,KAAAA,WAAa,KACbC,KAAAA,UAAW,EACXF,KAAAA,OAASA,EAElBG,QAKUC,MAAAA,EAAapB,EAAaqB,YAE3BH,KAAAA,UAAW,EACXD,KAAAA,WAAaK,YAAY,KACpBC,MAAAA,EAAcC,KAAKC,MACnBC,EAAYN,EAAaG,EACzBI,EAAO,KAAKC,UAAUF,GACvBV,KAAAA,OAAOW,IACb,KAEPE,OAIsB,IAHC7B,EAAaqB,YACZG,KAAKC,QAGrBK,cAAc,KAAKb,YACdC,KAAAA,UAAW,GAIxBU,UAAUG,GAgBL,MAAA,CAAE1B,KARI,KAAK2B,IAAIC,KAAKC,MAAMH,EAHrBI,QAWG7B,MAND,KAAK0B,IAAIC,KAAKC,MAAOH,EALvBI,MADCC,OAYS7B,QAJN,KAAKyB,IAAIC,KAAKC,MAAQH,EAP1BI,MADCC,KADEC,MAagB7B,QAFf,KAAKwB,IAAIC,KAAKC,MAASH,EAT3BI,MADCC,KADEC,IADA,OAgBbL,IAAIpB,GACG0B,OAAAA,OAAO1B,GAAO2B,SAAS,EAAG,MAIrC,MAAMC,EAAQ,IAAI1B,EAAM,CAACE,OAAQyB,IAEjC,SAASA,GAAiB,KAAEpC,EAAF,MAAQC,EAAR,QAAeC,EAAf,QAAwBC,IAC9CH,EAAKgB,eAAiBhB,KACtBC,EAAMe,eAAiBf,KACvBC,EAAQc,eAAiBd,KACzBC,EAAQa,eAAiBb,IAG7BL,EAAYuC,iBAAiB,QAASF,EAAMrB,MAAMwB,KAAKH,GAAQA,EAAMX,KAAKc,KAAKH","file":"timer.614ec37b.js","sourceRoot":"../src","sourcesContent":["const dateSelector = document.getElementById('date-selector');\nconst startButton = document.querySelector('[data-start]');\nconst days = document.querySelector('[data-days]');\nconst hours = document.querySelector('[data-hours]');\nconst minutes = document.querySelector('[data-minutes]');\nconst seconds = document.querySelector('[data-seconds]');\n\nstartButton.disabled = true;\nconsole.log(dateSelector.value);\nconst startButtonActive = () => {\n    if (!dateSelector.value) {\n        return\n    }\n    startButton.disabled = false;\n};\nstartButtonActive();\n\nclass Timer {\n    constructor({ onTick}) {\n        this.intervalId = null;\n        this.isActive = false;\n        this.onTick = onTick;\n    }\n    start() {\n        // if (this.isActive) {\n        //     return;\n        //  }\n\n        const finishTime = dateSelector.textContent;\n\n        this.isActive = true;\n        this.intervalId = setInterval(() => {\n            const currentTime = Date.now();\n            const deltaTime = finishTime - currentTime;\n            const time = this.convertMs(deltaTime);\n            this.onTick(time);\n        }, 1000);\n    }\n    stop() {\n        const finishTime = dateSelector.textContent;\n        const currentTime = Date.now();\n        const deltaTime = finishTime - currentTime;\n        if (deltaTime === 0) {\n            clearInterval(this.intervalId);\n            this.isActive = false;\n        }\n        return;\n    }\n    convertMs(ms) {\n  // Number of milliseconds per unit of time\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n\n  // Remaining days\n  const days = this.pad(Math.floor(ms / day));\n  // Remaining hours\n  const hours = this.pad(Math.floor((ms % day) / hour));\n  // Remaining minutes\n  const minutes = this.pad(Math.floor(((ms % day) % hour) / minute));\n  // Remaining seconds\n  const seconds = this.pad(Math.floor((((ms % day) % hour) % minute) / second));\n\n  return { days, hours, minutes, seconds };\n    }\n    pad(value) {\n    return String(value).padStart(2, '0');\n }\n}\n\nconst timer = new Timer({onTick: updateTimerField});\n\nfunction updateTimerField({ days, hours, minutes, seconds }) {\n    days.textContent = `${days}:`;\n    hours.textContent = `${hours}:`;\n    minutes.textContent = `${minutes}:`;\n    seconds.textContent = `${seconds}`;\n }\n\nstartButton.addEventListener('click', timer.start.bind(timer), timer.stop.bind(timer));\n\n// console.log(convertMs(2000)); // {days: 0, hours: 0, minutes: 0, seconds: 2}\n// console.log(convertMs(140000)); //{days: 0, hours: 0, minutes: 2, seconds: 20}\n// console.log(convertMs(24140000)); // {days: 0, hours: 6, minutes: 42, seconds: 20}"]}